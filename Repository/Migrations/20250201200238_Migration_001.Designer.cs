// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository.Repository;

#nullable disable

namespace Repository.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    [Migration("20250201200238_Migration_001")]
    partial class Migration_001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Credits = 3,
                            Name = "Matematicas"
                        },
                        new
                        {
                            Id = 2,
                            Credits = 3,
                            Name = "Literatura"
                        },
                        new
                        {
                            Id = 3,
                            Credits = 3,
                            Name = "Programación"
                        },
                        new
                        {
                            Id = 4,
                            Credits = 3,
                            Name = "Bases de Datos"
                        },
                        new
                        {
                            Id = 5,
                            Credits = 3,
                            Name = "Seguridad Informatica"
                        },
                        new
                        {
                            Id = 6,
                            Credits = 3,
                            Name = "Inteligencia Artificial"
                        },
                        new
                        {
                            Id = 7,
                            Credits = 3,
                            Name = "Arquitectura"
                        },
                        new
                        {
                            Id = 8,
                            Credits = 3,
                            Name = "Redes"
                        },
                        new
                        {
                            Id = 9,
                            Credits = 3,
                            Name = "Ingles"
                        },
                        new
                        {
                            Id = 10,
                            Credits = 3,
                            Name = "Catedra"
                        });
                });

            modelBuilder.Entity("Entities.CreditsStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("CreditsStudent");
                });

            modelBuilder.Entity("Entities.RegisteredCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("RegisteredCourses");
                });

            modelBuilder.Entity("Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Entities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "carlos@prueba.com",
                            Name = "Carlos Molina",
                            Phone = "5555555"
                        },
                        new
                        {
                            Id = 2,
                            Email = "laura@prueba.com",
                            Name = "Laura Suarez",
                            Phone = "4444444"
                        },
                        new
                        {
                            Id = 3,
                            Email = "diana@prueba.com",
                            Name = "Diana Duarte",
                            Phone = "3333333"
                        },
                        new
                        {
                            Id = 4,
                            Email = "luis@prueba.com",
                            Name = "Luis Rodriguez",
                            Phone = "4562314"
                        },
                        new
                        {
                            Id = 5,
                            Email = "oscar@prueba.com",
                            Name = "Oscar Londoño",
                            Phone = "9563214"
                        });
                });

            modelBuilder.Entity("Entities.TeacherCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherCourses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 4,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 5,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 6,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 7,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 8,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 9,
                            TeacherId = 5
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 10,
                            TeacherId = 5
                        });
                });

            modelBuilder.Entity("Entities.CreditsStudent", b =>
                {
                    b.HasOne("Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Entities.RegisteredCourse", b =>
                {
                    b.HasOne("Entities.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Entities.TeacherCourse", b =>
                {
                    b.HasOne("Entities.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
